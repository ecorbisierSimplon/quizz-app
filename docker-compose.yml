version: "3.8"
services:
  app-backend:
    container_name: Server-DB
    platform: linux/x86_64
    build:
      context: ./backend
      target: dev
    volumes:
      - ./backend/src:/app_backend/src
      - ./backend/node_modules:/app_backend/node_modules
    ports:
      - "3000:3000"
    env_file:
      - ./.env/postgres.env
      - ./.env/SMTP.env
      - ./.env/maildev.env
      - ./.env/backend.env
    depends_on:
      - db
    command: npm run start:dev

  app-frontend:
    container_name: Server-FRONT
    platform: linux/x86_64
    build:
      context: ./frontend
    env_file:
      - ./.env/environnements.env
    ports:
      - "8080:5173"
    volumes:
      - ./frontend/src:/app_frontend/src
      - ./frontend/node_modules:/app_frontend/node_modules
      - ./frontend/.svelte-kit:/app_frontend/.svelte-kit
      - ./frontend/static:/app_frontend/static
    depends_on:
      - app-backend
    command: npm run dev -- --host

  db:
    container_name: postgres_quizz
    image: postgres:latest
    restart: always
    env_file:
      - ./.env/postgres.env
    volumes:
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/DataBase/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  adminer:
    container_name: adminer_quizz
    image: adminer:latest
    restart: always
    ports:
      - "5051:8080"
    env_file:
      - ./.env/postgres.env
      - ./.env/adminer.env
    depends_on:
      - db

  pgadmin:
    container_name: pgadmin_quizz
    image: dpage/pgadmin4:latest
    restart: always
    env_file:
      - ./.env/pgadmin.env
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
